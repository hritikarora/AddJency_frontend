{"ast":null,"code":"import axios from '../../node_modules/axios';\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass UserService {\n  constructor() {\n    this.validateUser = async (email, password) => {\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n      const response = await axios.get(USER_API_BASE_URL + '/' + email);\n      let res = response.data;\n\n      if (res.password == password) {\n        console.log(res);\n        let data = {\n          email: res.emailId,\n          password: res.password,\n          id: res.id,\n          userType: res.userType,\n          companyName: res.companyName,\n          firstname: res.firstName,\n          lastname: res.lastName\n        };\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, JSON.stringify(data));\n        sessionStorage.setItem(\"id\", res.id);\n        console.log(JSON.parse(sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)));\n        return true;\n      }\n    };\n\n    this.getAllAds = async () => {\n      let id = sessionStorage.getItem(\"id\");\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n      const response = await axios.get(USER_API_BASE_URL + \"/\" + id);\n      let list = response.data;\n      return list;\n    };\n\n    this.getAllAdsByCompanyName = async () => {\n      let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n      let cName = JSON.parse(user).companyName;\n      console.log(user);\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n      console.log(cName);\n      const response = await axios.get(USER_API_BASE_URL + \"/\" + cName + \"/Pending\");\n      let list = response.data;\n      return list;\n    };\n  }\n\n  createUser(user) {\n    console.log(user);\n    return axios.post(USER_API_BASE_URL.concat(\"/users\"), user);\n  }\n\n  createAd(advertisement) {\n    console.log(advertisement);\n    return axios.post(USER_API_BASE_URL.concat(\"/adv\"), advertisement);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user.email == null) return false;else return true;\n  }\n\n  getLoggedInUserId() {\n    let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user.email == null) return '';else return user.id;\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/home/hritik/Desktop/AddJency_frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","UserService","validateUser","email","password","response","get","res","data","console","log","emailId","id","userType","companyName","firstname","firstName","lastname","lastName","sessionStorage","setItem","JSON","stringify","parse","getItem","getAllAds","list","getAllAdsByCompanyName","user","cName","createUser","post","concat","createAd","advertisement","isUserLoggedIn","getLoggedInUserId"],"mappings":"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","sourcesContent":["import axios from '../../node_modules/axios';\n\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass UserService {\n\n    createUser(user){\n        console.log(user)\n        return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);\n    }\n\n    createAd(advertisement)\n    {\n        console.log(advertisement)\n        return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);\n    }\n\n    validateUser = async (email,password) => {\n\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n          \n        const response = await axios.get(USER_API_BASE_URL + '/' + email);\n          \n        let res = response.data;\n\n        if(res.password == password)\n        {\n            console.log(res);\n            let data = {email:res.emailId, password:res.password, id:res.id , userType:res.userType, companyName:res.companyName, firstname:res.firstName, lastname:res.lastName};\n            sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,JSON.stringify(data));\n            sessionStorage.setItem(\"id\",res.id);\n            console.log(JSON.parse(sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)));\n            return true;\n        }\n      }\n      isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n\n        if(user.email == null) return false;\n        else return true;\n    }\n\n    getLoggedInUserId() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        if (user.email == null) return '';\n        else return user.id;\n\n    }\n    getAllAds = async () => {\n\n        let id = sessionStorage.getItem(\"id\");\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        const response = await axios.get(USER_API_BASE_URL+\"/\"+id);\n          \n        let list = response.data;\n        return list;\n    }\n\n    getAllAdsByCompanyName = async () => {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        let cName = JSON.parse(user).companyName;\n\n        console.log(user)\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        console.log(cName)\n        const response = await axios.get(USER_API_BASE_URL+\"/\"+cName+\"/Pending\");\n          \n        let list = response.data;\n        return list;\n    }\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}