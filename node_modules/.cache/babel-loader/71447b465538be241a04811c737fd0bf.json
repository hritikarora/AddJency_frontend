{"ast":null,"code":"import axios from '../../node_modules/axios';\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\nclass UserService {\n  constructor() {\n    this.validateUser = async () => {\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n      const response = await axios.get(USER_API_BASE_URL + '/' + email); // let response = validateUser(email);\n\n      let res = response.data;\n\n      if (res.password == password) {\n        let data = {\n          email: data.emailId,\n          password: data.password,\n          id: data.id\n        };\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, data);\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  createUser(user) {\n    console.log(user);\n    return axios.post(USER_API_BASE_URL.concat(\"/users\"), user);\n  }\n\n  createAd(advertisement) {\n    console.log(advertisement);\n    return axios.post(USER_API_BASE_URL.concat(\"/adv\"), advertisement);\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/home/hritik/Desktop/spring-react/frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","UserService","validateUser","response","get","email","res","data","password","emailId","id","sessionStorage","setItem","createUser","user","console","log","post","concat","createAd","advertisement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AAEA,MAAMC,iBAAiB,GAAG,8BAA1B;AAEA,OAAO,MAAMC,gCAAgC,GAAG,mBAAzC;;AAEP,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAadC,YAbc,GAaC,YAAY;AAEnB,YAAMH,iBAAiB,GAAG,oCAA1B;AAEA,YAAMI,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUL,iBAAiB,GAAG,GAApB,GAA0BM,KAApC,CAAvB,CAJmB,CAQvB;;AACA,UAAIC,GAAG,GAAGH,QAAQ,CAACI,IAAnB;;AAEA,UAAGD,GAAG,CAACE,QAAJ,IAAgBA,QAAnB,EACA;AACI,YAAID,IAAI,GAAG;AAACF,UAAAA,KAAK,EAACE,IAAI,CAACE,OAAZ;AAAqBD,UAAAA,QAAQ,EAACD,IAAI,CAACC,QAAnC;AAA6CE,UAAAA,EAAE,EAACH,IAAI,CAACG;AAArD,SAAX;AACAC,QAAAA,cAAc,CAACC,OAAf,CAAuBZ,gCAAvB,EAAwDO,IAAxD;AACA,eAAO,IAAP;AACH,OALD,MAMI;AACA,eAAO,KAAP;AACH;AACF,KAjCW;AAAA;;AAEdM,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOhB,KAAK,CAACmB,IAAN,CAAWlB,iBAAiB,CAACmB,MAAlB,CAAyB,QAAzB,CAAX,EAA8CJ,IAA9C,CAAP;AACH;;AAEDK,EAAAA,QAAQ,CAACC,aAAD,EACR;AACIL,IAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACA,WAAOtB,KAAK,CAACmB,IAAN,CAAWlB,iBAAiB,CAACmB,MAAlB,CAAyB,MAAzB,CAAX,EAA4CE,aAA5C,CAAP;AACH;;AAXa;;AAqClB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import axios from '../../node_modules/axios';\n\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass UserService {\n\n    createUser(user){\n        console.log(user)\n        return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);\n    }\n\n    createAd(advertisement)\n    {\n        console.log(advertisement)\n        return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);\n    }\n\n    validateUser = async () => {\n\n            const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n          \n            const response = await axios.get(USER_API_BASE_URL + '/' + email);\n          \n            \n\n        // let response = validateUser(email);\n        let res = response.data;\n\n        if(res.password == password)\n        {\n            let data = {email:data.emailId, password:data.password, id:data.id};\n            sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,data);\n            return true;\n        }\n        else{\n            return false;\n        }\n      }\n\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}