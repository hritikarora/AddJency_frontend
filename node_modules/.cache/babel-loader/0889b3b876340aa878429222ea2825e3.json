{"ast":null,"code":"import axios from '../../node_modules/axios';\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass UserService {\n  constructor() {\n    this.validateUser = async (email, password) => {\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n      const response = await axios.get(USER_API_BASE_URL + '/' + email);\n      let res = response.data;\n\n      if (res.password == password) {\n        let data = {\n          email: res.emailId,\n          password: res.password,\n          id: res.id,\n          userType: res.userType,\n          companyName: res.companyName\n        };\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, JSON.stringify(data));\n        sessionStorage.setItem(\"id\", res.id);\n        console.log(res.id);\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.getAllAds = async () => {\n      let id = sessionStorage.getItem(\"id\");\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n      const response = await axios.get(USER_API_BASE_URL + \"/\" + id);\n      let list = response.data;\n      return list;\n    };\n\n    this.getAllAdsByCompanyName = async () => {\n      let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n      let cName = JSON.parse(user);\n      console.log(user);\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n      console.log(cName);\n      const response = await axios.get(USER_API_BASE_URL + \"/\" + cName + \"/Pending\");\n      let list = response.data;\n      return list;\n    };\n  }\n\n  createUser(user) {\n    console.log(user);\n    return axios.post(USER_API_BASE_URL.concat(\"/users\"), user);\n  }\n\n  createAd(advertisement) {\n    console.log(advertisement);\n    return axios.post(USER_API_BASE_URL.concat(\"/adv\"), advertisement);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user.email == null) return false;else return true;\n  }\n\n  getLoggedInUserId() {\n    let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user.email == null) return '';else return user.id;\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/home/hritik/Desktop/spring-react/frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","UserService","validateUser","email","password","response","get","res","data","emailId","id","userType","companyName","sessionStorage","setItem","JSON","stringify","console","log","getAllAds","getItem","list","getAllAdsByCompanyName","user","cName","parse","createUser","post","concat","createAd","advertisement","isUserLoggedIn","getLoggedInUserId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AAEA,MAAMC,iBAAiB,GAAG,8BAA1B;AAEA,OAAO,MAAMC,gCAAgC,GAAG,mBAAzC;;AAEP,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAadC,YAbc,GAaC,OAAOC,KAAP,EAAaC,QAAb,KAA0B;AAErC,YAAML,iBAAiB,GAAG,oCAA1B;AAEA,YAAMM,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,iBAAiB,GAAG,GAApB,GAA0BI,KAApC,CAAvB;AAEA,UAAII,GAAG,GAAGF,QAAQ,CAACG,IAAnB;;AAEA,UAAGD,GAAG,CAACH,QAAJ,IAAgBA,QAAnB,EACA;AACI,YAAII,IAAI,GAAG;AAACL,UAAAA,KAAK,EAACI,GAAG,CAACE,OAAX;AAAoBL,UAAAA,QAAQ,EAACG,GAAG,CAACH,QAAjC;AAA2CM,UAAAA,EAAE,EAACH,GAAG,CAACG,EAAlD;AAAuDC,UAAAA,QAAQ,EAACJ,GAAG,CAACI,QAApE;AAA8EC,UAAAA,WAAW,EAACL,GAAG,CAACK;AAA9F,SAAX;AACAC,QAAAA,cAAc,CAACC,OAAf,CAAuBd,gCAAvB,EAAwDe,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAxD;AACAK,QAAAA,cAAc,CAACC,OAAf,CAAuB,IAAvB,EAA4BP,GAAG,CAACG,EAAhC;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACG,EAAhB;AACA,eAAO,IAAP;AACH,OAPD,MAQI;AACA,eAAO,KAAP;AACH;AACF,KAhCW;;AAAA,SA8CdS,SA9Cc,GA8CF,YAAY;AAEpB,UAAIT,EAAE,GAAGG,cAAc,CAACO,OAAf,CAAuB,IAAvB,CAAT;AACA,YAAMrB,iBAAiB,GAAG,kCAA1B;AAEA,YAAMM,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,iBAAiB,GAAC,GAAlB,GAAsBW,EAAhC,CAAvB;AAEA,UAAIW,IAAI,GAAGhB,QAAQ,CAACG,IAApB;AACA,aAAOa,IAAP;AACH,KAvDa;;AAAA,SAyDdC,sBAzDc,GAyDW,YAAY;AACjC,UAAIC,IAAI,GAAGV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CAAX;AACA,UAAIwB,KAAK,GAAGT,IAAI,CAACU,KAAL,CAAWF,IAAX,CAAZ;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,YAAMxB,iBAAiB,GAAG,kCAA1B;AAEAkB,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,YAAMnB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,iBAAiB,GAAC,GAAlB,GAAsByB,KAAtB,GAA4B,UAAtC,CAAvB;AAEA,UAAIH,IAAI,GAAGhB,QAAQ,CAACG,IAApB;AACA,aAAOa,IAAP;AACH,KArEa;AAAA;;AAEdK,EAAAA,UAAU,CAACH,IAAD,EAAM;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,WAAOzB,KAAK,CAAC6B,IAAN,CAAW5B,iBAAiB,CAAC6B,MAAlB,CAAyB,QAAzB,CAAX,EAA8CL,IAA9C,CAAP;AACH;;AAEDM,EAAAA,QAAQ,CAACC,aAAD,EACR;AACIb,IAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;AACA,WAAOhC,KAAK,CAAC6B,IAAN,CAAW5B,iBAAiB,CAAC6B,MAAlB,CAAyB,MAAzB,CAAX,EAA4CE,aAA5C,CAAP;AACH;;AAsBCC,EAAAA,cAAc,GAAG;AACf,QAAIR,IAAI,GAAGV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CAAX;AAEA,QAAGuB,IAAI,CAACpB,KAAL,IAAc,IAAjB,EAAuB,OAAO,KAAP,CAAvB,KACK,OAAO,IAAP;AACR;;AAED6B,EAAAA,iBAAiB,GAAG;AAChB,QAAIT,IAAI,GAAGV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CAAX;AACA,QAAIuB,IAAI,CAACpB,KAAL,IAAc,IAAlB,EAAwB,OAAO,EAAP,CAAxB,KACK,OAAOoB,IAAI,CAACb,EAAZ;AAER;;AA7Ca;;AAwElB,eAAe,IAAIT,WAAJ,EAAf","sourcesContent":["import axios from '../../node_modules/axios';\n\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass UserService {\n\n    createUser(user){\n        console.log(user)\n        return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);\n    }\n\n    createAd(advertisement)\n    {\n        console.log(advertisement)\n        return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);\n    }\n\n    validateUser = async (email,password) => {\n\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n          \n        const response = await axios.get(USER_API_BASE_URL + '/' + email);\n          \n        let res = response.data;\n\n        if(res.password == password)\n        {\n            let data = {email:res.emailId, password:res.password, id:res.id , userType:res.userType, companyName:res.companyName};\n            sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,JSON.stringify(data));\n            sessionStorage.setItem(\"id\",res.id);\n            console.log(res.id);\n            return true;\n        }\n        else{\n            return false;\n        }\n      }\n      isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n\n        if(user.email == null) return false;\n        else return true;\n    }\n\n    getLoggedInUserId() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        if (user.email == null) return '';\n        else return user.id;\n\n    }\n    getAllAds = async () => {\n\n        let id = sessionStorage.getItem(\"id\");\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        const response = await axios.get(USER_API_BASE_URL+\"/\"+id);\n          \n        let list = response.data;\n        return list;\n    }\n\n    getAllAdsByCompanyName = async () => {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        let cName = JSON.parse(user);\n\n        console.log(user)\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        console.log(cName)\n        const response = await axios.get(USER_API_BASE_URL+\"/\"+cName+\"/Pending\");\n          \n        let list = response.data;\n        return list;\n    }\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}