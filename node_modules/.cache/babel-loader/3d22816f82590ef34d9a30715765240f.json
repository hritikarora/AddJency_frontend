{"ast":null,"code":"import axios from '../../node_modules/axios';\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\nclass UserService {\n  constructor() {\n    this.validateUser = async () => {\n      const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n      const response = await axios.get(USER_API_BASE_URL + '/' + email);\n      return response;\n    };\n  }\n\n  createUser(user) {\n    console.log(user);\n    return axios.post(USER_API_BASE_URL.concat(\"/users\"), user);\n  }\n\n  createAd(advertisement) {\n    console.log(advertisement);\n    return axios.post(USER_API_BASE_URL.concat(\"/adv\"), advertisement);\n  }\n\n  validate(password) {\n    let response = validateUser();\n    let res = response.data;\n\n    if (res.password == password) {\n      let data = {\n        email: data.emailId,\n        password: data.password,\n        id: data.id\n      };\n      sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, data);\n    } else {}\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/home/hritik/Desktop/spring-react/frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","UserService","validateUser","response","get","email","createUser","user","console","log","post","concat","createAd","advertisement","validate","password","res","data","emailId","id","sessionStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AAEA,MAAMC,iBAAiB,GAAG,8BAA1B;AAEA,OAAO,MAAMC,gCAAgC,GAAG,mBAAzC;;AAEP,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAadC,YAbc,GAaC,YAAY;AAEvB,YAAMH,iBAAiB,GAAG,oCAA1B;AAEA,YAAMI,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUL,iBAAiB,GAAG,GAApB,GAA0BM,KAApC,CAAvB;AAEA,aAAOF,QAAP;AACH,KApBa;AAAA;;AAEdG,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOT,KAAK,CAACY,IAAN,CAAWX,iBAAiB,CAACY,MAAlB,CAAyB,QAAzB,CAAX,EAA8CJ,IAA9C,CAAP;AACH;;AAEDK,EAAAA,QAAQ,CAACC,aAAD,EACR;AACIL,IAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACA,WAAOf,KAAK,CAACY,IAAN,CAAWX,iBAAiB,CAACY,MAAlB,CAAyB,MAAzB,CAAX,EAA4CE,aAA5C,CAAP;AACH;;AAUDC,EAAAA,QAAQ,CAACC,QAAD,EAAU;AAEd,QAAIZ,QAAQ,GAAGD,YAAY,EAA3B;AACA,QAAIc,GAAG,GAAGb,QAAQ,CAACc,IAAnB;;AAEA,QAAGD,GAAG,CAACD,QAAJ,IAAgBA,QAAnB,EACA;AACI,UAAIE,IAAI,GAAG;AAACZ,QAAAA,KAAK,EAACY,IAAI,CAACC,OAAZ;AAAqBH,QAAAA,QAAQ,EAACE,IAAI,CAACF,QAAnC;AAA6CI,QAAAA,EAAE,EAACF,IAAI,CAACE;AAArD,OAAX;AAEAC,MAAAA,cAAc,CAACC,OAAf,CAAuBrB,gCAAvB,EAAwDiB,IAAxD;AACH,KALD,MAMI,CAEH;AACF;;AAnCW;;AAuClB,eAAe,IAAIhB,WAAJ,EAAf","sourcesContent":["import axios from '../../node_modules/axios';\n\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass UserService {\n\n    createUser(user){\n        console.log(user)\n        return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);\n    }\n\n    createAd(advertisement)\n    {\n        console.log(advertisement)\n        return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);\n    }\n\n    validateUser = async () => {\n\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n      \n        const response = await axios.get(USER_API_BASE_URL + '/' + email);\n      \n        return response;\n    }\n    validate(password){\n\n        let response = validateUser();\n        let res = response.data;\n\n        if(res.password == password)\n        {\n            let data = {email:data.emailId, password:data.password, id:data.id};\n            \n            sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,data);\n        }\n        else{\n            \n        }\n      };\n\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}