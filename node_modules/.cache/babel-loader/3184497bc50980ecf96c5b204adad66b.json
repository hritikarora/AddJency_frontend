{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\spring-react\\\\frontend\\\\src\\\\components\\\\Firebase\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport axios from 'axios';\nimport config from '../Firebase/firebaseConfig';\nimport './SignIn.css';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router'; // component imports\n\nimport NavBar from '../NavBar/NavBar';\nimport { ROOT_URL } from '../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseApp = firebase.initializeApp(config);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider().setCustomParameters({\n    prompt: 'select_account'\n  })\n};\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      // userName:\"\",\n      password: \"\",\n      authFlag: false,\n      userFromFirebaseGoogle: \"\"\n    };\n\n    this.emailChangeHandler = e => {\n      this.setState({\n        email: e.target.value\n      });\n\n      if (e.target.value == \"\") {\n        document.getElementById(\"email-error\").innerHTML = \"Please enter valid email address\";\n      } else {\n        document.getElementById(\"email-error\").innerHTML = \"\";\n      }\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n\n      if (e.target.value == \"\") {\n        document.getElementById(\"password-error\").innerHTML = \"Please enter valid Password\";\n      } else {\n        document.getElementById(\"password-error\").innerHTML = \"\";\n      }\n    };\n\n    this.submitLogin = e => {\n      //prevent page from refresh\n      e.preventDefault();\n      const data = {\n        email: this.state.email,\n        password: this.state.password\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true;\n\n      if (this.state.email === '' || this.state.password === '') {\n        if (this.state.email === '') {\n          document.getElementById(\"email-error\").innerHTML = \"Please enter email\";\n        }\n\n        if (this.state.password === '') {\n          document.getElementById(\"password-error\").innerHTML = \"Please enter password\";\n        }\n      } else {\n        //make a post request with the user data\n        const request = axios.post(`${ROOT_URL}/signIn`, data).then(response => {\n          console.log(\"response\", response);\n\n          if (response.status === 200) {\n            if (response.data.userDetails) {\n              console.log(\"the user is logged in\");\n              sessionStorage.setItem('email', response.data.userDetails.email);\n              sessionStorage.setItem('type', response.data.userDetails.type);\n              sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\n              sessionStorage.setItem('userId', response.data.userDetails.id);\n              this.props.history.push(\"/home\");\n            } else if (response.data.error) {\n              console.log(\"there is some error in sign in which needs to be displayed to the user\");\n              document.getElementById(\"signIn-error\").innerHTML = response.data.error;\n              console.log(response.data.error);\n            }\n          }\n        }).catch(error => {\n          console.log(\"error\", error);\n        });\n      }\n    };\n\n    this.signOutUser = () => {\n      firebaseApp.auth().signOut().then(function () {\n        // Sign-out successful.\n        sessionStorage.clear();\n        console.log(\"signed out successfully\");\n      }).catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n    };\n\n    this.loginGoogleUser = () => {\n      try {\n        firebaseApp.auth().signInWithPopup(providers.googleProvider).then(user => {\n          console.log(\"====user in function =====\", user);\n          this.setState({\n            userFromFirebase: user.user\n          });\n          console.log(\"======user.user.displayName\", user.user.displayName);\n          this.setState({\n            email: user.user.email\n          }); // make a database call here to add the user to the database with the user signerd in with google flag on \n          // may be I can extract the call in the function and send the paranmeter that shows the user signned with google\n          // I will need to check if this is the first time the user is signing in with google as nly the first time the entry needs to be made i the database\n          // for that I'll require an api to check if the email exists in the database or not.\n\n          axios.defaults.withCredentials = true;\n          axios.get(`${ROOT_URL}/getUser/${user.user.email}`).then(response => {\n            // console.log(\"=== response ===\", response);\n            if (response.status === 200) {\n              // this means that response is received we need to check if the user is present or not\n              if (response.data.userDetails) {\n                // this means that data is present in the database and hence the user is not registering for the first time in the system\n                sessionStorage.setItem('email', response.data.userDetails.email);\n                sessionStorage.setItem('type', response.data.userDetails.type);\n                sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\n                sessionStorage.setItem('userId', response.data.userDetails.id);\n                sessionStorage.setItem('userFromGoogleLogin', true);\n                this.props.history.push(\"/home\");\n              } else {\n                // need to checkif error is not thrown and make a axios call to put the user into the database system \n                console.log(\"=== first timeuser put in db\");\n                let name = user.user.displayName;\n                name = name.split(\" \"); // console.log(\"after split name is\", name);\n                // console.log(\"name[0]\", name[0]);\n                // console.log(\"name[1]\", name[1]);\n\n                const data = {\n                  firstName: name[0],\n                  lastName: name[1],\n                  email: this.state.email,\n                  googleSignIn: true // password: this.state.password \n\n                };\n                axios.post(`${ROOT_URL}/register`, data).then(response => {\n                  console.log(\"==== response from adding the new user to the database\", response); // localStorage.setItem('email', response.data.userDetails.email);\n\n                  sessionStorage.setItem('email', response.data.userDetails.email);\n                  sessionStorage.setItem('type', response.data.userDetails.type);\n                  sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\n                  sessionStorage.setItem('userId', response.data.userDetails.id);\n                  sessionStorage.setItem('userFromGoogleLogin', true);\n                  this.props.history.push(\"/home\");\n                }).catch(error => {\n                  console.log(\"=== error ==\", error);\n                });\n              }\n            }\n          }).catch(error => {\n            console.log(\"=== error in first catch===\", error);\n          });\n        }).catch(error => {\n          console.log(\"=== error in login using google auth === \", error);\n        });\n      } catch (error) {\n        console.log(error);\n        console.log(\"---in catch-here\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      user // signInWithGoogle,\n\n    } = this.props;\n    console.log(\"=======user=========\", user); // console.log(\"======= signInWithGoogle=========\", signInWithGoogle);\n\n    let redirect = null;\n\n    if (sessionStorage.getItem(\"email\")) {\n      console.log(\"=============should redirect\");\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [redirect, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"intro\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jumbotron\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Jumbotron__wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"ValueProps hidden-xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  s: 6,\n                  md: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  s: 6,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"divForm\",\n                    children: /*#__PURE__*/_jsxDEV(Form, {\n                      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                        children: \"Sign In\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"formBasicEmail\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          class: \"text-muted\",\n                          children: \"Email address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"email\",\n                          placeholder: \"Enter email\",\n                          onChange: this.emailChangeHandler\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 230,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"email-error\",\n                          class: \"error\",\n                          class: \"text-danger\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"formBasicPassword\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          class: \"text-muted\",\n                          children: \"Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"password\",\n                          placeholder: \"Password\",\n                          onChange: this.passwordChangeHandler\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"password-error\",\n                          class: \"error\",\n                          class: \"text-danger\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"buttonWrapper\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"danger\",\n                          type: \"submit\",\n                          id: \"buttonWrapper\",\n                          onClick: this.submitLogin,\n                          children: \"Submit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"buttonWrapper\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"signIn-error\",\n                          class: \"error\",\n                          class: \"text-danger\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"buttonWrapper\",\n                        children: sessionStorage.getItem(\"userId\") ? /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"danger\",\n                          onClick: () => this.signOutUser(),\n                          children: \"Sign out\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"danger\",\n                          onClick: () => this.loginGoogleUser(),\n                          children: \"Sign in with Google\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 33\n                        }, this) // : <Button variant=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  s: 6,\n                  md: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(SignIn); //==\n// add the create user using email to the login page in\n// use the firebase.createUserWithEmailAnd PaassWord()","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/spring-react/frontend/src/components/Firebase/SignIn.js"],"names":["React","Component","withFirebaseAuth","firebase","axios","config","Button","Form","Row","Col","Redirect","NavBar","ROOT_URL","firebaseApp","initializeApp","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","SignIn","state","email","password","authFlag","userFromFirebaseGoogle","emailChangeHandler","e","setState","target","value","document","getElementById","innerHTML","passwordChangeHandler","submitLogin","preventDefault","data","defaults","withCredentials","request","post","then","response","console","log","status","userDetails","sessionStorage","setItem","type","isVerified","id","props","history","push","error","catch","signOutUser","signOut","clear","loginGoogleUser","signInWithPopup","user","userFromFirebase","displayName","get","name","split","firstName","lastName","googleSignIn","render","redirect","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport axios from 'axios';\r\n\r\nimport config from '../Firebase/firebaseConfig';\r\nimport './SignIn.css';\r\nimport {\r\n  Button,\r\n  Form, Row, Col\r\n} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router'\r\n\r\n// component imports\r\nimport NavBar from '../NavBar/NavBar'\r\nimport { ROOT_URL } from '../constants/constants';\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider().setCustomParameters({\r\n    prompt: 'select_account'\r\n  }),\r\n\r\n};\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    // userName:\"\",\r\n    password: \"\",\r\n    authFlag: false,\r\n    userFromFirebaseGoogle: \"\"\r\n  }\r\n  // componentDidMount(){\r\n  //   auth.getAuth().onAuthStateChanged(user => {\r\n  //     if (user) {\r\n  //       this.props.history.push('/dashboard');\r\n  //     }\r\n  //   });\r\n  // }\r\n  emailChangeHandler = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    })\r\n    if (e.target.value == \"\") {\r\n      document.getElementById(\"email-error\").innerHTML = \"Please enter valid email address\";\r\n    } else {\r\n      document.getElementById(\"email-error\").innerHTML = \"\";\r\n    }\r\n  }\r\n  //password change handler to update state variable with the text entered by the user\r\n  passwordChangeHandler = (e) => {\r\n    this.setState({\r\n      password: e.target.value\r\n    })\r\n    if (e.target.value == \"\") {\r\n      document.getElementById(\"password-error\").innerHTML = \"Please enter valid Password\";\r\n    } else {\r\n      document.getElementById(\"password-error\").innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  //submit Login handler to send a request to the node backend\r\n  submitLogin = (e) => {\r\n\r\n    //prevent page from refresh\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    //set the with credentials to true\r\n    axios.defaults.withCredentials = true;\r\n    if (this.state.email === '' || this.state.password === '') {\r\n      if (this.state.email === '') {\r\n        document.getElementById(\"email-error\").innerHTML = \"Please enter email\";\r\n      }\r\n      if (this.state.password === '') {\r\n        document.getElementById(\"password-error\").innerHTML = \"Please enter password\";\r\n      }\r\n    } else {\r\n      //make a post request with the user data\r\n      const request = axios.post(`${ROOT_URL}/signIn`, data)\r\n        .then((response) => {\r\n          console.log(\"response\", response);\r\n          if (response.status === 200) {\r\n            if (response.data.userDetails) {\r\n              console.log(\"the user is logged in\");\r\n              sessionStorage.setItem('email', response.data.userDetails.email);\r\n              sessionStorage.setItem('type', response.data.userDetails.type);\r\n              sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\r\n              sessionStorage.setItem('userId',response.data.userDetails.id);\r\n              this.props.history.push(\"/home\")\r\n            } else if (response.data.error) {\r\n              console.log(\"there is some error in sign in which needs to be displayed to the user\");\r\n              document.getElementById(\"signIn-error\").innerHTML = response.data.error;\r\n              console.log(response.data.error);\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"error\", error);\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  signOutUser = () => {\r\n    firebaseApp.auth().signOut().then(function () {\r\n      // Sign-out successful.\r\n      sessionStorage.clear();\r\n      console.log(\"signed out successfully\");\r\n    }).catch(function (error) {\r\n      // An error happened.\r\n      console.log(error)\r\n    });\r\n  }\r\n  loginGoogleUser = () => {\r\n    try {\r\n\r\n      firebaseApp.auth().signInWithPopup(providers.googleProvider).then(user => {\r\n        console.log(\"====user in function =====\", user)\r\n        this.setState({\r\n          userFromFirebase: user.user\r\n        })\r\n        console.log(\"======user.user.displayName\", user.user.displayName);\r\n\r\n        this.setState({ email: user.user.email });\r\n        // make a database call here to add the user to the database with the user signerd in with google flag on \r\n        // may be I can extract the call in the function and send the paranmeter that shows the user signned with google\r\n        // I will need to check if this is the first time the user is signing in with google as nly the first time the entry needs to be made i the database\r\n        // for that I'll require an api to check if the email exists in the database or not.\r\n        axios.defaults.withCredentials = true;\r\n\r\n        axios.get(`${ROOT_URL}/getUser/${user.user.email}`)\r\n          .then((response) => {\r\n            // console.log(\"=== response ===\", response);\r\n            if (response.status === 200) {\r\n              // this means that response is received we need to check if the user is present or not\r\n              if (response.data.userDetails) {\r\n                // this means that data is present in the database and hence the user is not registering for the first time in the system\r\n                sessionStorage.setItem('email', response.data.userDetails.email);\r\n                sessionStorage.setItem('type', response.data.userDetails.type);\r\n                sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\r\n                sessionStorage.setItem('userId',response.data.userDetails.id);\r\n                sessionStorage.setItem('userFromGoogleLogin',true);\r\n                this.props.history.push(\"/home\")\r\n              } else {\r\n                // need to checkif error is not thrown and make a axios call to put the user into the database system \r\n                console.log(\"=== first timeuser put in db\")\r\n                let name = user.user.displayName;\r\n                name = name.split(\" \");\r\n                // console.log(\"after split name is\", name);\r\n                // console.log(\"name[0]\", name[0]);\r\n                // console.log(\"name[1]\", name[1]);\r\n                const data = {\r\n                  firstName: name[0],\r\n                  lastName: name[1],\r\n                  email: this.state.email,\r\n                  googleSignIn:true\r\n                  // password: this.state.password \r\n                };\r\n                axios.post(`${ROOT_URL}/register`, data)\r\n                  .then((response) => {\r\n                    console.log(\"==== response from adding the new user to the database\", response);\r\n                    // localStorage.setItem('email', response.data.userDetails.email);\r\n                    sessionStorage.setItem('email', response.data.userDetails.email);\r\n                    sessionStorage.setItem('type', response.data.userDetails.type); \r\n                    sessionStorage.setItem('isVerified', response.data.userDetails.isVerified);\r\n                    sessionStorage.setItem('userId',response.data.userDetails.id);\r\n                    sessionStorage.setItem('userFromGoogleLogin',true);\r\n                    this.props.history.push(\"/home\")\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(\"=== error ==\", error);\r\n                  })\r\n              }\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(\"=== error in first catch===\", error);\r\n          })\r\n\r\n      }).catch(error => {\r\n        console.log(\"=== error in login using google auth === \", error)\r\n      })\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n      console.log(\"---in catch-here\")\r\n\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      user,\r\n      // signInWithGoogle,\r\n    } = this.props;\r\n    console.log(\"=======user=========\", user);\r\n    // console.log(\"======= signInWithGoogle=========\", signInWithGoogle);\r\n    let redirect = null\r\n    if (sessionStorage.getItem(\"email\")) {\r\n      console.log(\"=============should redirect\")\r\n      redirect = <Redirect to=\"/home\" />\r\n    }\r\n    return (\r\n      <div>\r\n        {redirect}\r\n        <div id=\"intro\">\r\n          <div className=\"content\">\r\n            <NavBar />\r\n            <div className=\"jumbotron\">\r\n              <div className=\"Jumbotron__wrapper\">\r\n                <div class=\"ValueProps hidden-xs\"></div>\r\n                <Row>\r\n                  <Col s={6} md={4}></Col>\r\n                  <Col s={6} md={4}>\r\n                    <div id=\"divForm\">\r\n                      <Form>\r\n                        <h1>Sign In</h1>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                          <Form.Label class=\"text-muted\">Email address</Form.Label>\r\n                          <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.emailChangeHandler} />\r\n                          <div id=\"email-error\" class=\"error\" class=\"text-danger\"></div>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                          <Form.Label class=\"text-muted\">Password</Form.Label>\r\n                          <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.passwordChangeHandler} />\r\n                          <div id=\"password-error\" class=\"error\" class=\"text-danger\"></div>\r\n                        </Form.Group>\r\n                        <div id=\"buttonWrapper\">\r\n                          <Button variant=\"danger\" type=\"submit\" id=\"buttonWrapper\" onClick={this.submitLogin}>\r\n                            Submit</Button>\r\n                        </div>\r\n                        {/* <br></br> */}\r\n                        <div id=\"buttonWrapper\">\r\n                          <div id=\"signIn-error\" class=\"error\" class=\"text-danger\"></div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div id=\"buttonWrapper\">\r\n                          {/* {\r\n                            user\r\n                              ? <p>Hello, {user.displayName}, with email is {user.email} </p>\r\n                              : <p>Please sign in.</p>\r\n                          } */}\r\n                          {\r\n                            sessionStorage.getItem(\"userId\")\r\n                              ? <Button variant=\"danger\" onClick={() => this.signOutUser()}>Sign out</Button>\r\n                              : <Button variant=\"danger\" onClick={() => this.loginGoogleUser()}>Sign in with Google</Button>\r\n                            // : <Button variant=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\r\n                          }\r\n                        </div>\r\n                      </Form>\r\n                    </div>\r\n\r\n                  </Col>\r\n                  <Col s={6} md={4}></Col>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(SignIn);\r\n\r\n\r\n//==\r\n// add the create user using email to the login page in\r\n// use the firebase.createUserWithEmailAnd PaassWord()\r\n\r\n"]},"metadata":{},"sourceType":"module"}