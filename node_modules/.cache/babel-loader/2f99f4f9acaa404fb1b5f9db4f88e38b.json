{"ast":null,"code":"import _regeneratorRuntime from\"/home/hritik/Desktop/spring-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hritik/Desktop/spring-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/hritik/Desktop/spring-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hritik/Desktop/spring-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'../../node_modules/axios';var USER_API_BASE_URL=\"http://localhost:8084/api/v1\";export var USER_NAME_SESSION_ATTRIBUTE_NAME=\"authenticatedUser\";var UserService=/*#__PURE__*/function(){function UserService(){_classCallCheck(this,UserService);this.validateUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var USER_API_BASE_URL,response,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:USER_API_BASE_URL=\"http://localhost:8084/api/v1/users\";_context.next=3;return axios.get(USER_API_BASE_URL+'/'+email);case 3:response=_context.sent;res=response.data;if(!(res.password==password)){_context.next=13;break;}data={email:res.emailId,password:res.password,id:res.id,userType:res.userType,companyName:res.companyName};sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,JSON.stringify(data));sessionStorage.setItem(\"id\",res.id);console.log(res.id);return _context.abrupt(\"return\",true);case 13:return _context.abrupt(\"return\",false);case 14:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();this.getAllAds=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var id,USER_API_BASE_URL,response,list;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=sessionStorage.getItem(\"id\");USER_API_BASE_URL=\"http://localhost:8084/api/v1/adv\";_context2.next=4;return axios.get(USER_API_BASE_URL+\"/\"+id);case 4:response=_context2.sent;list=response.data;return _context2.abrupt(\"return\",list);case 7:case\"end\":return _context2.stop();}}},_callee2);}));this.getAllAdsByCompanyName=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var user,cName,USER_API_BASE_URL,response,list;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);cName=user.companyName;USER_API_BASE_URL=\"http://localhost:8084/api/v1/adv\";_context3.next=5;return axios.get(USER_API_BASE_URL+\"/\"+cName+\"/Pending\");case 5:response=_context3.sent;list=response.data;return _context3.abrupt(\"return\",list);case 8:case\"end\":return _context3.stop();}}},_callee3);}));}_createClass(UserService,[{key:\"createUser\",value:function createUser(user){console.log(user);return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);}},{key:\"createAd\",value:function createAd(advertisement){console.log(advertisement);return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user.email==null)return false;else return true;}},{key:\"getLoggedInUserId\",value:function getLoggedInUserId(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user.email==null)return'';else return user.id;}}]);return UserService;}();export default new UserService();","map":{"version":3,"sources":["/home/hritik/Desktop/spring-react/frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","UserService","validateUser","email","password","get","response","res","data","emailId","id","userType","companyName","sessionStorage","setItem","JSON","stringify","console","log","getAllAds","getItem","list","getAllAdsByCompanyName","user","cName","post","concat","advertisement"],"mappings":"+nBAAA,MAAOA,CAAAA,KAAP,KAAkB,0BAAlB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,8BAA1B,CAEA,MAAO,IAAMC,CAAAA,gCAAgC,CAAG,mBAAzC,C,GAEDC,CAAAA,W,uFAaFC,Y,0FAAe,iBAAOC,KAAP,CAAaC,QAAb,0JAELL,iBAFK,CAEe,oCAFf,uBAIYD,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAG,GAApB,CAA0BI,KAApC,CAJZ,QAILG,QAJK,eAMPC,GANO,CAMDD,QAAQ,CAACE,IANR,MAQRD,GAAG,CAACH,QAAJ,EAAgBA,QARR,2BAUHI,IAVG,CAUI,CAACL,KAAK,CAACI,GAAG,CAACE,OAAX,CAAoBL,QAAQ,CAACG,GAAG,CAACH,QAAjC,CAA2CM,EAAE,CAACH,GAAG,CAACG,EAAlD,CAAuDC,QAAQ,CAACJ,GAAG,CAACI,QAApE,CAA8EC,WAAW,CAACL,GAAG,CAACK,WAA9F,CAVJ,CAWPC,cAAc,CAACC,OAAf,CAAuBd,gCAAvB,CAAwDe,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAxD,EACAK,cAAc,CAACC,OAAf,CAAuB,IAAvB,CAA4BP,GAAG,CAACG,EAAhC,EACAO,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACG,EAAhB,EAbO,gCAcA,IAdA,0CAiBA,KAjBA,yD,wEAiCfS,S,sEAAY,+KAEJT,EAFI,CAECG,cAAc,CAACO,OAAf,CAAuB,IAAvB,CAFD,CAGFrB,iBAHE,CAGkB,kCAHlB,wBAKeD,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAC,GAAlB,CAAsBW,EAAhC,CALf,QAKFJ,QALE,gBAOJe,IAPI,CAOGf,QAAQ,CAACE,IAPZ,kCAQDa,IARC,0D,QAWZC,sB,sEAAyB,uLACjBC,IADiB,CACVV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CADU,CAEjBwB,KAFiB,CAETD,IAAI,CAACX,WAFI,CAIfb,iBAJe,CAIK,kCAJL,wBAMED,CAAAA,KAAK,CAACO,GAAN,CAAUN,iBAAiB,CAAC,GAAlB,CAAsByB,KAAtB,CAA4B,UAAtC,CANF,QAMflB,QANe,gBAQjBe,IARiB,CAQVf,QAAQ,CAACE,IARC,kCASda,IATc,0D,sDAvDzB,oBAAWE,IAAX,CAAgB,CACZN,OAAO,CAACC,GAAR,CAAYK,IAAZ,EACA,MAAOzB,CAAAA,KAAK,CAAC2B,IAAN,CAAW1B,iBAAiB,CAAC2B,MAAlB,CAAyB,QAAzB,CAAX,CAA8CH,IAA9C,CAAP,CACH,C,wBAED,kBAASI,aAAT,CACA,CACIV,OAAO,CAACC,GAAR,CAAYS,aAAZ,EACA,MAAO7B,CAAAA,KAAK,CAAC2B,IAAN,CAAW1B,iBAAiB,CAAC2B,MAAlB,CAAyB,MAAzB,CAAX,CAA4CC,aAA5C,CAAP,CACH,C,8BAsBC,yBAAiB,CACf,GAAIJ,CAAAA,IAAI,CAAGV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CAAX,CAEA,GAAGuB,IAAI,CAACpB,KAAL,EAAc,IAAjB,CAAuB,MAAO,MAAP,CAAvB,IACK,OAAO,KAAP,CACR,C,iCAED,4BAAoB,CAChB,GAAIoB,CAAAA,IAAI,CAAGV,cAAc,CAACO,OAAf,CAAuBpB,gCAAvB,CAAX,CACA,GAAIuB,IAAI,CAACpB,KAAL,EAAc,IAAlB,CAAwB,MAAO,EAAP,CAAxB,IACK,OAAOoB,CAAAA,IAAI,CAACb,EAAZ,CAER,C,2BAyBL,cAAe,IAAIT,CAAAA,WAAJ,EAAf","sourcesContent":["import axios from '../../node_modules/axios';\n\nconst USER_API_BASE_URL = \"http://localhost:8084/api/v1\";\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass UserService {\n\n    createUser(user){\n        console.log(user)\n        return axios.post(USER_API_BASE_URL.concat(\"/users\"),user);\n    }\n\n    createAd(advertisement)\n    {\n        console.log(advertisement)\n        return axios.post(USER_API_BASE_URL.concat(\"/adv\"),advertisement);\n    }\n\n    validateUser = async (email,password) => {\n\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/users\";\n          \n        const response = await axios.get(USER_API_BASE_URL + '/' + email);\n          \n        let res = response.data;\n\n        if(res.password == password)\n        {\n            let data = {email:res.emailId, password:res.password, id:res.id , userType:res.userType, companyName:res.companyName};\n            sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,JSON.stringify(data));\n            sessionStorage.setItem(\"id\",res.id);\n            console.log(res.id);\n            return true;\n        }\n        else{\n            return false;\n        }\n      }\n      isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n\n        if(user.email == null) return false;\n        else return true;\n    }\n\n    getLoggedInUserId() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        if (user.email == null) return '';\n        else return user.id;\n\n    }\n    getAllAds = async () => {\n\n        let id = sessionStorage.getItem(\"id\");\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        const response = await axios.get(USER_API_BASE_URL+\"/\"+id);\n          \n        let list = response.data;\n        return list;\n    }\n\n    getAllAdsByCompanyName = async () => {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        let cName = user.companyName;\n\n        const USER_API_BASE_URL = \"http://localhost:8084/api/v1/adv\";\n          \n        const response = await axios.get(USER_API_BASE_URL+\"/\"+cName+\"/Pending\");\n          \n        let list = response.data;\n        return list;\n    }\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}